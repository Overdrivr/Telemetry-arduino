plugins {
  id "org.ajoberstar.grgit" version "1.5.0-milestone.2"
}

import org.ajoberstar.grgit.*

task cloneCoreRepo << {
  delete "${rootDir}/build/repo"
  delete "${rootDir}/src/core"
  Grgit.clone(dir: file('build/repo'), uri: 'https://github.com/Overdrivr/Telemetry')
}

task prepare(type: Copy) {
  dependsOn << cloneCoreRepo
  from './build/repo/src/telemetry/c', './build/repo/src/telemetry/headers/'
  into './src/core/'
  include '**/**.c','**/**.h'
}

//TODO : add version to the zip
task pack(type: Zip){
  from './dist/arduino/'
  into './Telemetry/'
  archiveName 'Telemetry-arduino.zip'
}

apply plugin: 'cpp'

model {
  buildTypes {
    debug
    release
  }

  toolChains {
    gcc(Gcc) { }
  }

  components {
    hardwareSerialMock(NativeLibrarySpec) {
      sources {
        cpp {
          source {
             srcDirs "test/hardwareserial/"
             include "HardwareSerial.cpp"
          }
          exportedHeaders {
            srcDirs "test/hardwareserial/"
            include "HardwareSerial.h"
          }
        }
      }
    }

    telemetry(NativeLibrarySpec) {
      binaries.all {
        lib library: "hardwareSerialMock"
      }
      sources {
        cpp {
          source {
             srcDirs "src/"
             include "**/*.c", "**/*.cpp"
          }
          exportedHeaders {
            srcDirs "src/"
            include "**/*.h", "**/*.hpp"
          }
        }
      }
    }

    test(NativeExecutableSpec) {
      binaries.all {
        lib library: "hardwareSerialMock"
        lib library: "telemetry"
      }
      sources {
        cpp {
          source {
             srcDirs "test/src/"
             include "**/*.cpp"
          }
          exportedHeaders {
            srcDirs "test/src/"
            include "**/*.hpp"
          }
        }
      }
    }

  }
}
